<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAACGFJREFUaEO9mflvVFUYhvkH9A8ykV+IUWNc4hKDCyAKsqgIKVoBoQ1QwiatZdFK
        wVaI2JZNatlahAIiBQpCW8siixDFFCNWgkFjP+/z9b7jmcvMlJaLJ3lz7sx0et/nfN/5zjl3ht1NO9N1
        0tqOHjP1aP+RI3bgwAHb3brfdu9qsS1NzfbV1l22oWGj1Xy+wTZtrLX6L7dZ8+5+8XdtB7+2+F/+f23W
        3Lk27+NPbdna9VayqMIWLV3qWvJhpZVXVNhH1WvcNAa3H/zWVtZ85p/xt3MXL86I/6Ne1yXzy1ylZQsz
        Wr5qVbqQ3GxKyVJ7aEKRPTNqvI14+FF7YPjwjF4c9YoDdFy6Ym0nT9mSj6ptQfkyl0zKNHqnZE5GU4rf
        jVQc612bXDTd/z6+dTqNm1797Vf7pKHRI4HKKiptQeWnbrz12Ak3j5raTmQAGE2NfghRCGBqBEB041un
        07jp7zdvuAA5c/lKljDecqLTFQJgZEgRiFIvvnU6rXhOqZvvudHrAuLitR43397dbd90n3W1fnfKAeZX
        rnEAzYF8o58PIPUIYCCXeUYegMNnL+SMQJhGuSKA4VmzZ2dB3BMAbioAdPGXn7MAZD4EoAphHogkQDaE
        Rv+/KPCd+NbpNG6oFGL0BaD0kfldx066khGQkuYVhSQI8PGt02mkkC9Y0WLF4oWoPBKjznshgNYBTeQQ
        IAmRBEh9HQCAcklPmXtt4ls2cdJkF68xhFk3Hmn8G9McgAhoIg8EIBGRewLQef6SHY7Spe2bw9a0Z5+t
        a9jq60DJkhVW9F6pTS9d7IvdGzPn23MjX8qkkaIAACDhfOA6F0T6AJGJ1bXrbHVNrVVWVXkv81PnLHTT
        CAj6Z0ZP8C2GoiCQ5FygAmWuYwFQVVOTLgA3ZQ5s2LTFFn1QbqwLpMnYcRN9G4F4Pa24xN5fUO4AgAIQ
        plIYCcwqAjIOEH31+vXpAnBjUoiJqvRZXltn85Z97KOO3iuryKSRAIhC+cqV/duORCQy6RSZFoj61AG4
        KWa4MfOBCKDJRTMzInVIJyDCCAAQppIkgKQAomDEt06nEQFGn/0++T9/YbmnC2kjAaHJDABbbMxLggij
        kQuAQeIcEd86nQYABxPmAAcV0mfGouU2bV4EEgnTuvYUirbcRECiIglE5nWN6bAHgPvEt06nkTYcVqg8
        1H3K5GOPP2VPPv28X78w7i3fwygCI8dO8kqCeSJBWRQAEcgFIgFyTwAuXO+1jqvXfOPGqYuI+MkrGl2M
        ck2p5X1Mci0A9fztmtoPskAEEF5v3bE9XQDC6gDR5o29DwCSthbaTrClFgxRkAAQhECA0OsQ6p4AsApr
        34/xptYDeUEEgCiJIUAIIghMh6+/amlJHwCxcFFxKKGswlSkhsadPj989KONHWdiADCOmPS6RkkQCfNA
        cM0TjPjW6TTMU0LXrq/zEgoEq+/Lr4zzHjDKKisqE53NHsYljK+rq88CQbkigxiQ+NaF2+Vze+1Sd5Nd
        6Np2m3j/Ylej990nNmapq73e+/bDm+xg8xIfPZVSrcSkDwtSEmQgAXCodc/AAD+ebbN//vze+v45732o
        vr8uZ/X5dLpjt3UdKbNDzUUeFZVRPWahHEpEAAGSKxqhSMfYZv5mfX+Y9d2yvr97XLzW9UDib8+d6/LR
        3/7FaKtd9XRmJdZmDgBKqhbAUIIIhXH1dwhwa9Cm1SMm2uLSx232O8NtwpSxPvKkj1IIkwIQRC4YTKuX
        hgQwWBj2K9pKI+2HwghQz6UQBOWCkahksc38LQTglMV+n8mzr3mfa2djs4uHtYiHuiEABhl1TV6204g9
        kgC27Wxx8+pDYVRQoXife8U287cw/wcrADY2VPl+iL3Q6ElTffTD7bQAWJRQEiAUxv2pdmSe17HFwu1u
        AUghniCQOlKYQpiiniNBhJL5MDqKQmyxcAsBSCHSZ8AUikquvgMAhpm0YSrRsxsNAUKQEEjGEfWfTR9A
        scXCLQOAqajeZ8xxrV5KfhYJgJEvjvIUomf1zRWBvdHghBBJsRpz2FHVIvVii4WbA8h80qyUfF99DKBR
        Z1/EsRPzXAuAcoiASIKQ73yHswIRwDgRIPqxxcItAxCJn33CFFL6IP1sdKbzv5UbMYl1mBn/drGfiZVO
        SYBQmPWzcnTGJl0wzjU930GxxcLNS2hsRpLB0Giu10iTmDUAEHpOZURBcyA03tx21KPAiPMZIBhX3pNC
        iOetscXCTRFImg57KdfrTQ3LvfJoAkuklABYkEIplZiwpI9Sh4iQVoBy/o4tFm5EQIZIIaURD3BbW/Zk
        VSHS6EzH/tsAGHWdi9lSaxLzvgDaj/efERAG2aUy0lQhRp/XjDr9HZunhQCh7NbRrB713TyS9bkANOqa
        xJwHAGBeAEDpBYBTHCYVBSYwZwxGnc95FhTbuvMmADcUGUS6lmkpfK3vADBixEP2yGNPxk8l+ldiUkiT
        GNNIIIiUIQI86WM+zJg1a/DmaQDIsNKH1EGk0W1VKEqhEGLL5hU+4phnHRjz6jg/lRENRUAAoTBOJHg8
        E1sZWgsBBiu+BwDPRvlBz3/Ui46SvKYnAqQJZmUa8asOEeB3hdjG0Jun0PXGQct6d0QAe2xz/ULfeUqM
        /o4br1tn74MeAYyGxkmfux51tc5T7Xbz51q7fvmLvMr3ec8Pa633SpXVfTbTJzDmSRtOYy9fu8+e+P3+
        foAoAt9fvOC/qVFhUjF/9acOryCST84Cfa7ro/s/tEPb37T6mun+SAUAzgGkkVKKdYDFifQZ8iTN1U4f
        r7JbPTU+uoOVvre3MTK++lnbtmHGbcaY8MAAwKiz0sYfpddaNz9vrVvHDFl11WOsesWb6RsbsA0b9i8x
        3zKfSZZxKwAAAABJRU5ErkJggg==
</value>
  </data>
</root>